# -*- coding: utf-8 -*-
"""
 author: lvsongke@oneniceapp.com
 data:2019/09/26
"""

import math
import random
import matplotlib.pyplot as plt
from track.bezier_track import run_track_bezier
import numpy as np


def run_track(list_nodo):
    """
    模拟鼠标移动轨迹
    """
    res = []

    # 随机生成一个初始坐标
    # first = random.choice([[random.randint(160, 320), random.randint(0, 160)], [random.randint(160, 320), random.randint(0, 160)]])
    # first = [random.randint(160, 320), random.randint(80, 160)]
    print(list_nodo)
    for i in range(len(list_nodo) - 1):  # first 为第一个坐标， list_nodo 为下一个坐标
        # res_slope = slope(first, list_nodo[i])  # 计算两点之间的斜率
        track_bezier = control_point(list_nodo[i], list_nodo[i + 1])
        print(track_bezier)
        track = run_track_bezier(track_bezier)
        res.extend(track)
    return res


def fitness(track):
    '''
    利用numpy的poly1d计算出多项式的表达式，对轨迹进行拟合
    :param track:
    :return:
    '''
    x = np.array([x[0] for x in track])
    y = np.array([x[1] for x in track])
    # 对多项式的阶进行下降计算，#TODO：对阶数进行动态规划
    print('未拟合前坐标点数：{}'.format(str(len(track))))
    num = int(pow(len(track), 1 / 2.3))
    # 多项式曲线生成
    poly = np.poly1d(np.polyfit(x, y, num))

    # 绘制拟合曲线
    x_list = []
    y_list = []
    for t in [x[0] for x in track]:
        x_list.append(t)
        y_ = np.int(poly(t))
        y_list.append(y_)
    return list(zip(x_list, y_list))


def control_point(node_1, node_2):
    x1 = abs(node_2[0] - node_1[0]) / 3 + node_1[0]
    y1 = (160 - node_1[1])
    x2 = abs(node_2[0] - node_1[0]) * 2 / 3 + node_1[0]
    y2 = node_2[1]
    return [node_1, (int(x1), int(y1)), (int(x2), int(y2)), node_2]


def slope(a, b):
    """两点之间的斜率"""
    if not (a[0] - b[0]):
        return 0
    k = (a[1] - b[1]) / (a[0] - b[0])
    return k


def move_to(x, y, k):
    res_track = []
    if x[0] - y[0] == 0:
        y_p = x[1]
        distance_y = abs(x[1] - y[1])
        for _ in range(0, distance_y + 1):
            num = random.randint(0, 10)
            if x[0] > y[0]:
                y_p -= 2 * num
                y_p += num
                res_track.append((x[0], math.ceil(y_p)))
                if y_p <= y[1]:
                    return res_track
            else:
                y_p += num
                res_track.append((x[0], math.ceil(y_p)))
                if y_p >= y[1]:
                    return res_track
    distance = abs(x[0] - y[0])
    x_p = x[0]
    for _ in range(0, distance + 1):
        num = random.randint(0, 10)
        if x[0] > y[0]:
            x_p -= 2 * num
            x_p += num
            y_p = abs((x[0] - x_p) * k - x[1])
            res_track.append((x_p, math.ceil(y_p)))
            if x_p <= y[0]:
                res_track.append(tuple(y))
                return res_track
        else:
            x_p += num
            y_p = abs((x[0] - x_p) * k - x[1])
            res_track.append((x_p, math.ceil(y_p)))
            if x_p >= y[0]:
                res_track.append(tuple(y))
                return res_track


def bresenham_2(x, y):
    """
    :param x: 传入第一个点的坐标 type === tuple
    :param y: 传入第二个点的坐标 type === tuple
    :return:
    """
    sort_res = False
    if x[0] > y[0]:
        sort_res = True
        x, y = y, x
    k = slope(x, y)
    x0 = x[0]
    y0 = x[1]
    x1 = y[0]
    y1 = y[1]
    d = 0.5 - k
    res = []
    threshold = -4
    # diff = abs(x0 - x1) // 2
    if k < 0:
        d = k - 0.5
        # while abs(x0 - x1) // 3:
        for _ in range(2):
            if d <= 0:
                d += k - 0.5
                x0, y0 = x0 + 15, y0 + threshold
                if y0 >= 160:
                    y0 = random.randint(150, 159)
                elif y0 <= 0:
                    y0 = random.randint(1, 5)
                if x0 >= 320:
                    x0 = random.randint(310, 319)
                elif x0 <= 0:
                    x0 = random.randint(1, 5)
            else:
                d += k
                x0, y0 = x0 + 15, y0 + threshold  # (abs(x0 - x1) // 2)
                if y0 >= 160:
                    y0 = random.randint(150, 159)
                elif y0 <= 0:
                    y0 = random.randint(1, 5)
                if x0 >= 320:
                    x0 = random.randint(310, 319)
                elif x0 <= 0:
                    x0 = random.randint(1, 5)

            res.append((x0, int(abs(y0))))
        res.insert(0, tuple([x[0], x[1]]))
        res.append(tuple(y))
    else:
        for _ in range(2):
            if d <= 0:
                d += 0.5 - k
                x0, y0 = x0 + (abs(x0 - x1) // 2), y0 + threshold
                if y0 >= 160:
                    y0 = random.randint(150, 159)
                elif y0 <= 0:
                    y0 = random.randint(1, 5)
                if x0 >= 320:
                    x0 = random.randint(310, 319)
                elif x0 <= 0:
                    x0 = random.randint(1, 5)
            else:
                d -= k
                x0, y0 = x0 + (abs(x0 - x1) // 2), y0 + threshold
                if y0 >= 160:
                    y0 = random.randint(150, 159)
                elif y0 <= 0:
                    y0 = random.randint(1, 5)
                if x0 >= 320:
                    x0 = random.randint(310, 319)
                elif x0 <= 0:
                    x0 = random.randint(1, 5)
            res.append((x0, int(abs(y0))))
        res.insert(0, tuple([x[0], x[1]]))
        res.append(tuple(y))
    if sort_res:
        return res[::-1]
    return res


def plt_show(pos_track):
    x = [_[0] for _ in pos_track]
    y = [_[1] for _ in pos_track]

    # plt.plot(x, y)
    plt.figure('Scatter fig')
    ax = plt.gca()
    # 设置x轴、y轴名称
    ax.set_xlabel('x')
    ax.set_ylabel('y')
    ax.xaxis.set_ticks_position('top')
    ax.invert_yaxis()

    ax.set_ylim((160, 0))
    ax.set_xlim((0, 320))

    ax.scatter(x, y, c='r', s=5, alpha=0.5)
    plt.savefig('./bezier.png')
    plt.show()


if __name__ == '__main__':
    # pass
    # point_list = [[0, 0], [4, 0], [6, -2], [7, 4]]
    point_list = [[58, 60], [165, 105], [151, 45]]
    result = run_track(point_list)
    # result = fitness([(1, 3), (2, 3), (4, 4), (7, 4), (8, 5), (9, 5), (10, 5), (11, 5), (13, 5), (13, 6), (14, 6), (15, 6), (16, 6), (16, 7), (17, 7), (18, 7), (18, 7), (19, 7), (20, 7), (21, 8), (22, 8), (24, 8), (25, 8), (26, 9), (28, 9), (30, 10), (32, 10), (34, 10), (35, 10), (36, 10), (37, 10), (39, 10), (40, 10), (41, 10), (43, 11), (44, 11), (46, 11), (48, 11), (50, 11), (52, 11), (54, 12), (57, 12), (59, 13), (61, 13), (63, 13), (65, 13), (67, 14), (68, 14), (69, 14), (70, 14), (70, 14), (71, 14), (71, 14), (72, 14), (72, 14), (73, 14), (73, 15), (75, 15), (76, 15), (77, 15), (78, 15), (78, 15), (79, 15), (79, 16), (80, 16), (80, 16), (80, 16), (80, 16), (81, 16), (81, 16), (81, 16), (82, 16), (83, 17), (85, 17), (91, 20), (95, 22), (101, 24), (106, 25), (112, 27), (116, 27), (121, 27), (125, 27), (129, 27), (132, 27), (134, 27), (136, 27), (137, 27), (139, 27), (140, 27), (142, 27), (143, 27), (144, 27), (145, 27), (146, 27), (147, 27), (148, 27), (148, 27), (149, 27), (150, 27), (151, 27), (152, 27), (152, 27), (153, 27), (154, 27), (155, 27), (155, 27), (156, 27), (157, 27), (158, 27), (159, 27), (160, 27), (161, 26), (162, 26), (163, 26), (164, 26), (165, 26), (166, 26), (166, 25), (168, 25), (169, 25), (170, 25), (172, 25), (174, 24), (176, 24), (178, 24), (181, 23), (183, 23), (184, 23), (186, 22), (187, 22), (188, 22), (189, 22), (191, 21), (192, 21), (194, 21), (197, 21), (199, 20), (202, 20), (205, 19), (208, 19), (210, 18), (212, 18), (215, 17), (216, 16), (218, 16), (219, 16), (221, 15), (221, 15), (222, 15), (223, 15), (223, 15), (224, 15), (225, 14), (225, 14), (226, 14), (228, 14), (230, 14), (232, 14), (235, 13), (237, 13), (237, 13), (238, 13), (238, 13), (239, 13), (239, 13), (241, 13), (242, 13), (244, 13), (246, 13), (248, 13), (249, 13), (251, 13), (253, 13), (255, 13), (256, 13), (258, 13), (259, 13), (259, 13), (260, 13), (262, 13), (265, 13), (269, 13), (272, 13), (275, 13), (277, 13), (280, 13), (283, 13), (286, 13), (290, 13), (292, 13), (293, 13), (295, 13), (296, 13), (298, 13), (301, 13), (303, 13), (306, 13), (308, 14), (309, 14), (309, 14), (310, 14), (310, 14), (311, 14), (312, 14), (312, 14), (313, 14), (314, 15), (315, 16), (316, 16), (317, 16), (317, 17), (319, 17), (320, 18), (321, 18), (322, 18), (322, 18), (322, 19), (323, 19), (323, 19), (324, 20), (325, 21), (326, 22), (327, 23), (328, 23), (328, 24), (329, 24), (330, 25), (330, 26), (331, 27), (332, 28), (332, 30), (333, 31), (333, 31), (333, 32), (333, 32), (333, 32), (333, 32), (332, 32), (332, 33), (331, 33), (331, 33), (331, 33), (330, 33), (330, 34), (329, 34), (328, 34), (328, 34), (327, 35), (326, 36), (326, 36), (324, 37), (323, 38), (322, 39), (322, 39), (321, 40), (321, 40), (320, 40), (319, 41), (318, 41), (317, 42), (316, 43), (315, 43), (315, 44), (314, 44), (313, 44), (311, 44), (310, 45), (308, 45), (307, 45), (305, 45), (303, 45), (301, 45), (300, 45), (299, 45), (298, 45), (297, 45), (296, 46), (294, 46), (292, 46), (290, 46), (288, 46), (286, 46), (283, 47), (281, 47), (279, 47), (277, 47), (275, 47), (272, 47), (270, 47), (267, 47), (265, 47), (264, 47), (263, 47), (262, 47), (260, 47), (258, 47), (251, 47), (247, 47), (244, 47), (241, 47), (239, 47), (237, 47), (236, 47), (234, 47), (232, 47), (231, 46), (228, 46), (225, 45), (220, 44), (217, 43), (213, 42), (211, 42), (209, 42), (207, 42), (205, 42), (204, 41), (202, 41), (199, 41), (195, 41), (193, 41), (191, 40), (190, 40), (188, 40), (187, 40), (187, 40), (186, 40), (185, 40), (184, 39), (183, 39), (182, 39), (181, 39), (180, 39), (179, 39), (179, 39), (178, 39), (178, 39), (177, 39), (175, 39), (173, 39), (170, 42), (167, 43), (165, 44), (164, 45), (164, 45), (162, 45), (159, 45), (157, 45), (155, 45), (152, 45), (148, 45), (146, 45), (143, 46), (142, 46), (141, 46), (140, 46), (139, 46), (138, 46), (136, 46), (134, 46), (131, 46), (128, 46), (125, 46), (122, 46), (119, 46), (116, 46), (113, 46), (109, 46), (108, 46), (106, 46), (105, 46), (105, 46), (105, 46), (104, 45), (104, 45), (103, 45), (103, 45), (103, 45), (103, 44), (102, 44), (102, 44), (101, 44), (99, 44), (97, 44), (94, 45), (91, 45), (87, 45), (85, 45), (82, 45), (80, 46), (78, 46), (75, 46), (73, 46), (71, 46), (68, 46), (64, 46), (61, 46), (57, 47), (55, 47), (52, 47), (50, 48), (48, 48), (47, 48), (46, 49), (45, 49), (44, 49), (42, 49), (40, 49), (38, 49), (37, 49), (35, 49), (33, 49), (31, 49), (29, 49), (27, 50), (25, 50), (23, 50), (23, 50), (22, 50), (21, 50), (19, 50), (17, 50), (15, 49), (13, 49), (13, 49), (13, 50), (9, 57), (6, 61), (4, 64), (4, 65), (3, 66), (3, 67), (2, 67), (2, 67), (2, 67), (2, 67), (3, 67), (4, 67), (5, 67), (8, 67), (10, 67), (13, 67), (17, 67), (20, 67), (22, 67), (25, 67), (25, 68), (26, 68), (26, 68), (26, 68), (26, 68), (27, 68), (27, 68), (28, 68), (29, 69), (31, 69), (32, 69), (34, 69), (35, 69), (36, 70), (37, 70), (37, 70), (38, 70), (39, 70), (41, 70), (42, 70), (44, 71), (46, 71), (47, 71), (48, 72), (50, 72), (51, 72), (52, 72), (54, 72), (56, 73), (58, 73), (61, 73), (63, 73), (65, 73), (67, 73), (69, 74), (71, 74), (73, 74), (74, 74), (76, 74), (78, 74), (81, 74), (85, 74), (89, 74), (91, 74), (94, 74), (95, 74), (97, 74), (99, 74), (101, 74), (103, 74), (105, 74), (108, 74), (110, 74), (111, 74), (113, 74), (114, 74), (114, 74), (115, 74), (115, 74), (116, 74), (120, 74), (124, 74), (129, 74), (134, 74), (138, 74), (142, 74), (146, 74), (148, 74), (150, 74), (153, 74), (155, 74), (157, 74), (158, 74), (159, 74), (161, 74), (162, 74), (163, 74), (165, 74), (166, 73), (166, 73), (167, 73), (169, 73), (171, 73), (173, 73), (175, 73), (176, 73), (177, 73), (178, 73), (180, 73), (181, 72), (184, 72), (187, 72), (190, 72), (192, 71), (195, 71), (198, 70), (202, 69), (206, 68), (210, 67), (216, 65), (219, 64), (222, 64), (223, 64), (224, 64), (225, 64), (226, 64), (228, 64), (230, 64), (233, 64), (234, 64), (234, 64), (235, 64), (235, 64), (236, 64), (238, 64), (241, 64), (243, 65), (244, 65), (245, 65), (248, 66), (251, 67), (253, 68), (255, 68), (257, 69), (259, 69), (261, 70), (264, 70), (267, 70), (269, 71), (271, 71), (273, 71), (275, 71), (277, 71), (278, 71), (279, 71), (281, 71), (282, 71), (284, 71), (286, 71), (288, 71), (291, 71), (292, 71), (294, 71), (295, 71), (298, 71), (300, 71), (303, 71), (304, 71), (306, 71), (307, 71), (307, 71), (308, 71), (310, 71), (311, 71), (312, 71), (313, 72), (314, 72), (315, 72), (316, 72), (317, 73), (319, 74), (322, 75), (323, 75), (324, 75), (324, 75), (325, 75), (325, 75), (325, 75), (326, 75), (326, 76), (327, 76), (327, 76), (328, 76), (328, 76), (329, 76), (329, 76), (330, 76), (330, 76), (331, 77), (332, 77), (332, 78), (333, 78), (333, 78), (333, 78), (333, 78), (333, 79), (333, 79), (333, 79), (333, 79), (333, 80), (333, 80), (332, 82), (331, 83), (330, 85), (330, 86), (329, 87), (328, 89), (326, 91), (325, 92), (324, 93), (323, 94), (322, 94), (322, 94), (321, 95), (320, 95), (319, 96), (318, 96), (317, 97), (316, 97), (315, 97), (315, 97), (314, 98), (313, 98), (311, 98), (309, 98), (307, 98), (305, 98), (302, 98), (300, 98), (298, 98), (295, 98), (293, 98), (290, 97), (286, 97), (282, 97), (277, 97), (272, 97), (267, 96), (263, 96), (259, 96), (255, 95), (248, 93), (244, 92), (241, 91), (235, 89), (231, 89), (229, 88), (227, 88), (226, 87), (224, 87), (222, 87), (220, 86), (219, 86), (219, 86), (218, 86), (218, 86), (218, 86), (218, 86), (217, 86), (217, 86), (216, 86), (215, 86), (214, 87), (213, 87), (211, 87), (208, 88), (206, 88), (201, 88), (198, 88), (196, 88), (195, 88), (194, 88), (193, 88), (191, 88), (188, 88), (185, 88), (182, 88), (179, 89), (177, 89), (175, 90), (175, 90), (170, 91), (162, 97), (162, 96), (162, 96), (162, 96), (162, 96), (162, 96), (162, 96), (163, 95), (163, 95), (163, 94), (163, 94), (163, 94), (163, 94), (162, 94), (159, 93), (157, 92), (154, 91), (150, 90), (147, 90), (144, 89), (142, 89), (141, 89), (140, 89), (139, 89), (138, 89), (137, 89), (137, 89), (136, 89), (136, 89), (135, 89), (134, 89), (133, 89), (132, 89), (130, 89), (129, 89), (127, 89), (125, 89), (124, 89), (122, 89), (120, 89), (119, 89), (117, 88), (116, 88), (114, 88), (112, 88), (111, 88), (108, 87), (106, 87), (103, 87), (101, 86), (99, 86), (97, 85), (96, 85), (94, 85), (92, 84), (90, 84), (88, 84), (87, 84), (86, 84), (85, 84), (85, 84), (85, 84), (85, 84), (85, 84), (84, 84), (84, 84), (84, 84), (82, 84), (81, 84), (80, 84), (78, 84), (77, 84), (75, 85), (73, 85), (72, 85), (70, 85), (69, 85), (68, 86), (66, 86), (66, 86), (66, 86), (65, 86), (65, 86), (65, 86), (64, 86), (64, 86), (63, 86), (62, 86), (62, 86), (61, 86), (60, 86), (60, 86), (59, 87), (58, 87), (56, 87), (54, 87), (52, 87), (51, 87), (49, 88), (47, 88), (46, 88), (45, 89), (44, 89), (43, 89), (42, 89), (39, 89), (36, 89), (34, 89), (32, 89), (31, 89), (30, 89), (29, 89), (29, 89), (28, 89), (27, 89), (26, 89), (25, 89), (24, 89), (24, 89), (24, 89), (23, 89), (23, 89), (23, 89), (22, 89), (22, 89), (22, 89), (21, 89), (21, 89), (21, 89), (20, 89), (20, 89), (19, 90), (18, 91), (16, 92), (14, 93), (12, 95), (10, 96), (8, 97), (7, 98), (6, 98), (6, 99), (6, 99), (5, 99), (5, 99), (5, 99), (5, 100), (5, 100), (5, 100), (5, 101), (5, 102), (5, 102), (5, 103), (6, 103), (6, 104), (6, 104), (7, 104), (8, 104), (8, 104), (8, 105), (9, 105), (9, 105), (9, 106), (10, 106), (10, 107), (11, 107), (11, 108), (12, 108), (12, 108), (13, 109), (13, 109), (14, 110), (15, 110), (16, 111), (17, 111), (18, 112), (19, 112), (21, 113), (21, 113), (22, 114), (22, 114), (23, 114), (24, 114), (24, 114), (25, 114), (26, 114), (27, 115), (28, 115), (29, 115), (30, 115), (31, 115), (32, 115), (34, 115), (35, 115), (37, 115), (39, 116), (41, 116), (43, 117), (45, 117), (47, 117), (48, 117), (50, 117), (51, 117), (52, 117), (52, 117), (53, 117), (55, 117), (55, 117), (57, 117), (60, 117), (62, 117), (65, 117), (67, 117), (70, 117), (72, 117), (73, 117), (75, 117), (77, 117), (79, 117), (82, 117), (84, 117), (86, 117), (88, 117), (89, 117), (91, 117), (92, 117), (93, 117), (94, 117), (96, 117), (98, 117), (100, 117), (100, 117), (101, 117), (103, 117), (105, 117), (108, 117), (111, 117), (114, 117), (117, 117), (120, 118), (122, 118), (123, 118), (124, 118), (125, 118), (127, 118), (129, 118), (131, 118), (133, 118), (135, 118), (137, 118), (139, 118), (141, 118), (143, 118), (143, 118), (145, 118), (146, 118), (147, 118), (148, 118), (149, 118), (150, 118), (152, 118), (154, 118), (157, 118), (158, 118), (160, 118), (162, 118), (164, 118), (166, 118), (169, 118), (171, 118), (178, 118), (181, 118), (188, 115), (186, 115), (186, 115), (186, 115), (185, 115), (185, 116), (183, 116), (182, 117), (181, 117), (180, 118), (180, 118), (180, 118), (180, 118), (181, 118), (184, 118), (191, 118), (195, 118), (200, 118), (205, 118), (209, 118), (212, 118), (214, 118), (215, 118), (216, 118), (217, 118), (218, 118), (219, 118), (220, 118), (220, 118), (221, 118), (221, 118), (222, 118), (223, 118), (224, 118), (225, 118), (227, 118), (229, 118), (232, 118), (233, 118), (234, 118), (235, 118), (235, 118), (236, 118), (236, 118), (237, 118), (237, 118), (238, 118), (240, 118), (242, 118), (243, 118), (245, 118), (246, 118), (248, 118), (249, 118), (250, 118), (252, 118), (254, 118), (256, 118), (257, 118), (259, 118), (260, 118), (261, 118), (263, 118), (265, 118), (267, 117), (269, 117), (270, 117), (272, 117), (274, 117), (276, 116), (278, 116), (280, 116), (282, 116), (283, 116), (284, 116), (286, 116), (288, 115), (290, 115), (292, 115), (296, 115), (298, 115), (301, 115), (304, 115), (306, 114), (307, 114), (309, 114), (309, 114), (311, 114), (311, 114), (313, 114), (315, 114), (316, 114), (317, 114), (318, 114), (319, 114), (321, 114), (322, 114), (323, 114), (324, 115), (325, 115), (327, 116), (329, 117), (331, 118), (332, 119), (333, 119), (333, 120), (334, 120), (335, 121), (335, 122), (335, 122), (335, 123), (335, 123), (335, 124), (335, 124), (335, 125), (335, 125), (335, 125), (334, 125), (334, 125), (333, 126), (332, 126), (330, 127), (328, 128), (327, 129), (326, 130), (325, 130), (324, 130), (323, 130), (322, 130), (322, 131), (320, 131), (318, 131), (317, 131), (314, 132), (313, 132), (312, 132), (311, 132), (310, 132), (310, 132), (308, 133), (307, 133), (305, 133), (303, 133), (300, 133), (296, 133), (294, 133), (292, 133), (291, 133), (290, 133), (289, 133), (288, 133), (288, 133), (288, 133), (287, 133), (287, 133), (286, 133), (286, 133), (285, 133), (284, 133), (282, 133), (280, 133), (279, 133), (277, 133), (275, 133), (273, 133), (270, 133), (269, 133), (267, 133), (266, 133), (265, 133), (264, 133), (263, 133), (262, 134), (261, 134), (260, 134), (259, 134), (258, 134), (257, 134), (256, 134), (255, 134), (254, 134), (253, 134), (251, 134), (250, 134), (249, 134), (248, 134), (247, 134), (245, 134), (243, 134), (241, 134), (239, 134), (237, 134), (234, 133), (232, 133), (230, 133), (229, 133), (227, 133), (225, 133), (223, 133), (221, 133), (220, 133), (218, 133), (217, 133), (216, 133), (215, 133), (213, 133), (212, 132), (210, 132), (207, 132), (205, 132), (203, 131), (201, 131), (199, 131), (197, 131), (195, 131), (193, 131), (191, 131), (188, 131), (185, 131), (183, 131), (182, 131), (181, 131), (180, 130), (180, 130), (180, 130), (180, 128), (183, 127), (184, 125), (184, 125), (182, 125), (180, 127), (178, 128), (177, 128), (175, 129), (174, 129), (173, 130), (171, 130), (171, 130), (170, 130), (170, 130), (170, 130), (170, 130), (169, 130), (169, 130), (169, 130), (168, 130), (167, 130), (166, 130), (164, 130), (163, 130), (162, 131), (160, 131), (159, 131), (158, 131), (157, 132), (155, 132), (154, 132), (151, 132), (149, 133), (147, 133), (145, 133), (144, 133), (143, 134), (142, 134), (141, 134), (140, 134), (140, 134), (139, 134), (138, 134), (137, 134), (136, 134), (136, 134), (135, 134), (134, 134), (133, 134), (132, 134), (131, 134), (129, 134), (128, 134), (127, 134), (125, 134), (124, 134), (123, 134), (122, 134), (121, 134), (121, 134), (120, 134), (120, 134), (120, 133), (119, 133), (119, 133), (119, 133), (119, 133), (118, 133), (118, 133), (117, 133), (117, 133), (116, 133), (115, 133), (113, 132), (112, 132), (109, 132), (106, 132), (103, 131), (101, 131), (100, 131), (99, 131), (99, 131), (98, 131), (97, 131), (96, 131), (96, 132), (94, 132), (93, 133), (92, 133), (90, 133), (88, 133), (86, 134), (85, 134), (83, 134), (81, 134), (80, 134), (78, 134), (77, 134), (75, 134), (73, 135), (71, 135), (66, 135), (64, 135), (62, 136), (60, 136), (58, 136), (58, 136), (56, 136), (55, 136), (54, 136), (53, 136), (51, 136), (50, 136), (49, 136), (48, 136), (48, 136), (47, 136), (47, 136), (46, 136), (46, 136), (45, 136), (45, 136), (43, 136), (42, 136), (41, 136), (40, 136), (39, 136), (38, 136), (37, 136), (35, 136), (34, 136), (33, 136), (31, 136), (30, 136), (30, 136), (29, 136), (28, 136), (27, 136), (27, 136), (27, 136), (26, 136), (26, 136), (26, 136), (25, 136), (25, 136), (24, 136), (23, 136), (23, 136), (22, 136), (21, 136), (20, 136), (20, 136), (19, 136), (19, 136), (19, 136), (18, 136), (18, 136), (18, 136), (17, 136), (17, 136), (17, 136), (17, 136), (16, 136), (16, 136), (16, 136), (15, 136), (15, 136), (15, 136), (15, 136), (14, 136), (14, 136), (14, 136), (14, 136), (14, 136), (13, 136), (13, 136), (13, 136), (13, 136)])
    plt_show(result)
    # print(res)
    print(result)
    print(len(result))
